#lang racket/base

(require racket/format
         racket/path
         racket/runtime-path
         html-writing
         "../private/common.rkt"
         "common.rkt")

(provide gen-index
         support-files)

(define-runtime-path script-js "script.js")
(define-runtime-path style-css "style.css")
(define support-files (list script-js style-css))

(define (gen-index config outp)
  (define tasks (hash-ref config 'tasks null))
  (define task-map
    (for/hash ([task (in-list tasks)])
      (values (hash-ref task 'name) task)))

  (define (group-header title)
    `(tr (td (@ [class "group-header"] [colspan "2"]) ,title)))

  (define (row #:title title #:id id)
    (define link (format-file id))
    `(tr (@ [class "table-data"]
            [data-period ,(~a (task-period (hash-ref task-map id) config))]
            [data-link ,link])
         (td ,title)
         (td (a (@ [href ,link]) "Link"))))

  (define title (hash-ref (hash-ref config 'html #hasheq())
                          'title
                          "Service Monitor: Most Recent Heartbeats"))

  (displayln "<!-- This file is generated by gen-index.rkt. Do not manually edit this file. -->" outp)
  (displayln "<!DOCTYPE html>" outp)
  (write-html
   `((html
      (@ [lang "en"])
      (head (title ,title)
            (meta (@ [charset "utf-8"]))
            (meta (@ [http-equiv "refresh"] [content "30"]))
            (meta (@ [name "viewport"]
                     [content "width=device-width, initial-scale=1"]))
            (link (@ [rel "stylesheet"]
                     [href "./style.css"])))
      (body
       (main
        (h1 ,title)
        (table
         (thead
          (tr (@ [id "table-head"])
              (th (@ [scope "col"]) "Service")
              (th (@ [scope "col"]) "Raw link")))
         (tbody
          ,(group-header '(a (@ [href "https://pkgs.racket-lang.org/"])
                             "Package server"))
          ,(row #:title "Update" #:id "pkgd-update")
          ,(row #:title "Upload" #:id "pkgd-upload")

          ,(group-header '(a (@ [href "https://pkg-build.racket-lang.org/"])
                             "pkg-build"))
          ,(row #:title "pkg-build" #:id "pkg-build")

          ,(group-header '(a (@ [href "http://drdr.racket-lang.org/"]) "DrDr"))
          ,(row #:title "Poll" #:id "drdr-poll")
          ,(row #:title "Run" #:id "drdr-run")
          ,(row #:title "Disk" #:id "drdr-disk")

          ,(group-header '(a (@ [href "https://snapshot.racket-lang.org/"])
                             "Snapshots"))
          ,(row #:title "Utah" #:id "snapshot-utah")
          ,(row #:title "Northwestern" #:id "nwu-pkg-build-and-snapshot")

          ,(group-header '(a (@ [href "https://build-plot.racket-lang.org/"])
                             "Build plot"))
          ,(row #:title "CS" #:id "build-plot-cs")
          ,(row #:title "BC" #:id "build-plot-bc")

          ,(group-header "Condensed")
          ,(row #:title "Logs" #:id "condense-logs")
          ,(row #:title "West logs" #:id "condense-west-logs")

          ,(group-header "Take pulse")
          ,(row #:title "Utah" #:id "utah-monitor")
          ,(row #:title "Northwestern" #:id "nwu-monitor"))))

       (script (@ [src "script.js"])))))

   outp))

(module+ main
  (define config (get-config "https://heartbeat.racket-lang.org/"))
  (call-with-output-file* "index.html"
    #:exists 'replace
    (lambda (o) (gen-index config o)))
  (for ([support-file (in-list support-files)])
    (copy-file support-file (file-name-from-path support-file)
               #:exists-ok? #t))
  )
